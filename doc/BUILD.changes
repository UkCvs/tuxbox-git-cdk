Configuration options:

--with-targetruleset=[standard|flash] has been replaced by
  --[enable|disable]-flashrules. As opposed to previous versions,
  building yadds and buildung flash images do not exclude
  oneanother. Using --enable-flashrules targets for creating flash
  images are included in the generated Makefile, otherwise not. By
  default they are enabled. If enabled, all compilation is done using
  the flash-optimized compilation flags (no debugging info, stripped,
  compiled with -Os (optimize for size). Other than that,
  --enable-flashrules has no disadvantages, and can normally be left
  on. Using --with-targetrulset now gives a warning error; in the future it
  should be completely eliminated.

--[enable|disable]-oldtargets can be used to include some target that
  were present in the previous CVS Makefile. 

--[enable|disable]-libcrypto has been eliminated. libcrypto is not
  built by default; no reason to treat it differently from other
  optional libraries.

--with-serversupport=DIR: New option. Build template files for
  /etc/dhcpd.conf, /etc/fstab, /etc/hosts, and /etc/xinetd.d/tftp for
  a Linux server.
--with-logosdir=DIR: New option. Picks logo files from this directory,
  if found.
--with-ucodesdir=DIR: New option. Installs ucodes from this directory, if
  found. (An image containing Betaresearch ucodes may not legally be
  distributed.)

--enable-maintainer-mode still exists, but does nothing explicit. (It
  is passed on to invoked configure's, and enables automatic
  reinvocation of configure if necessary, so it makes sense.)

--with-checkImage=[none,rename,warn]  How/if to invoke checkImage. If
  `none', do nothing. If `rename' created images are checked by by
  checkImage, and if checkImage complains about the file (which may or
  may not mean that the image will not run), it is renamed to
  *_bad. If `warn', a zerosize *_bad-file ist created, to warn the
  user. Requested by dietmarw.

Removed configuration option:
--with-hostruleset=[standard,cygwin]. This was not working, and is not
  the right method. configure should take care of this. (Don't confuse
  this "removing support for Cygwin"! Building with Cygwin should
  preferrably be supported, but --with-hostruleset is not the way!)

Removed program:
  fakeroot has been eliminated.

FILENAMES: 

Naming system: A file system image is generally named
[root,var]-[neutrino,enigma].[cramfs,squashfs,jffs2]. Full images have
names like [neutrino,enigma]-[cramfs,squashfs,jffs2].img[1x,2x]. The
semantics is hopefully obvious.

The previous version of this work used the notation "jff2fs". It has
been replaced by "jffs2" ("journaled flash file system 2").

Makefile[.am]: 
Restructuring to make more target-driven (but still not
perfect). No unnecessary recursive invocation instead of dependencies.

Customization-hooks: Many rules calls customization script, if present. 
TODO: Explain this understandably.

Now builds root/.version file that can be parsed by neutrino. 

For neutrino, installs plugins tuxmail, tuxtext, tuxcom, vncviewer and
fx2/*. For enigma, installs fx2/* and enigma/*.

The partitioning table file linux/drivers/mtd/maps/dbox2-flash.c is now
generated from an m4-file, for all the different configurations.

Changed targets:
all: different semantics
busybox: replaced by $(targetprefix)/bin/busybox (for yadd) and
$(flashprefix)/root/bin/busybox (for flashing). For this, configurion
files busybox.config and busybox-flash.config merged to
busybox.config.m4.
mostlyclean: deletes built "tuxbox code", but not
unpack-build-install-delete code.


New (public) targets (see doc):
serversupport, everything, yadd-[all,none,neutrino,enigma,lcars],
dboxflasher, bare-os.


POSSIBLE PROBLEMS: 
-- Due to the new dependencies, sometimes rebuilds too much.
-- Neutrino contains ($(appsdir)/tuxbox/neutrino/src/gui/update.cpp)
   stuff like #ifdef SQUASHFS. This brain damage should be fixed in Neutrino.

TODO: 
-- Support kernel 2.6. Can this be done without building the kernel
   version into the CDK environment? 
-- Neutrino and Enigma should be installed (in flash) with something like
   $(MAKE) -C $(appsdir)/tuxbox/neutrino install prefix=$(flashprefix)/root/...
-- Possibly restructure Makefile.am, with non-essential stuff in
   included files,...?
-- Merge all the u-boot-*.dbox2.h files (or at least the ones we are
   using) into an m4-file. (Like I did with the busybox.)
-- Ditto for rcS[.insmod] (DONE),
-- and possibly also for the kernel .config? (Probably best only to
   care for 2.6.)
-- Check dependencies carefully, to minimize unnecessary rebuilds.
-- teach neutrino's flashfunction to recognize my file extensions 
   (finished, not yet in CVS)
-- Some rules (e.g. %/lib/ld.so.1) still look awful.

NICE THINGS TO HAVE:
-- download/build mkcramfs, mksquashfs, mkjffs2, mkfs.jffs2
-- Really fix the "Kein System"-problem (that checkImage is scratching
   on). (HARD)
-- At least optionally, it should be possible to build an absolutely
   minimal system. (sort-of done, see target bare-os and yadd-neutrino-micro)
-- Generate md5-checksums.

DISADVANTAGES in comparision to old version:
-- Needs more space to build,
-- May rebuild unnecessarily.
-- No support for images with more than one GUIs.
